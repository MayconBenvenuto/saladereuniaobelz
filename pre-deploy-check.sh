#!/bin/bash

echo "üîç VERIFICA√á√ÉO FINAL ANTES DO DEPLOY"
echo "===================================="

# Verificar se o build existe
if [ -f "frontend/build/index.html" ]; then
    echo "‚úÖ Build do frontend existe"
else
    echo "‚ùå Build do frontend n√£o encontrado"
    echo "Execute: cd frontend && npm run build"
    exit 1
fi

# Verificar se os arquivos da API existem
if [ -f "api/vercel.js" ]; then
    echo "‚úÖ API vercel.js existe"
else
    echo "‚ùå API vercel.js n√£o encontrado"
    exit 1
fi

if [ -f "api/index.js" ]; then
    echo "‚úÖ API index.js existe"
else
    echo "‚ùå API index.js n√£o encontrado"
    exit 1
fi

# Verificar vercel.json
if [ -f "vercel.json" ]; then
    echo "‚úÖ vercel.json existe"
else
    echo "‚ùå vercel.json n√£o encontrado"
    exit 1
fi

# Verificar vari√°veis de ambiente
if [ -f ".env" ]; then
    echo "‚úÖ Arquivo .env existe"
    if grep -q "SUPABASE_URL" .env && grep -q "SUPABASE_KEY" .env; then
        echo "‚úÖ Vari√°veis do Supabase configuradas"
    else
        echo "‚ö†Ô∏è  Verificar vari√°veis do Supabase no .env"
    fi
else
    echo "‚ö†Ô∏è  Arquivo .env n√£o encontrado"
fi

echo ""
echo "üìã CHECKLIST PARA VERCEL:"
echo "1. ‚úÖ Confirme que as vari√°veis de ambiente est√£o na Vercel:"
echo "   - SUPABASE_URL"
echo "   - SUPABASE_KEY" 
echo "   - REACT_APP_SUPABASE_URL"
echo "   - REACT_APP_SUPABASE_PUBLISHABLE_DEFAULT_KEY"
echo ""
echo "2. ‚úÖ Fa√ßa o commit e push:"
echo "   git add ."
echo "   git commit -m 'fix: resolve 404 error with corrected vercel config'"
echo "   git push origin main"
echo ""
echo "3. ‚úÖ Aguarde o deploy autom√°tico da Vercel"
echo ""
echo "üöÄ Pronto para deploy!"
